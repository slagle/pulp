# -----------------------------------------------------------------------------

[general]
# General guidelines for how the harness functions.

# Importer Type ID
importer_type_id: harness_importer

# Section name holding config values of importer
importer_config_type: importer

# ID of the repository created by the harness
repo_id: harness_repo_1

# Content ID to display in list_units call
list_content_id: harness_type_one

# The following can be used to subset the tasks performed by a script;
# set to false or comment out entirely to skip the task
run_delete_repo: false
run_create_repo: false
run_add_importer: false
run_add_distributor: false
run_sync_repo: false
run_sync_history: false
run_publish_repo: false
run_publish_history: false
run_associate_units: false
run_list_units: false
run_list_associations: false

# If true, the harness will wait for the user to press enter before executing
# each of the above tasks (not recommended when [output] -> silent is true.
pause: false

# -----------------------------------------------------------------------------

[importer]
# These properties are sent as the configuration for the importer on the repository.

# Number of units to simulate synchronizing into the repository.
num_units: 5

# Indicates if the harness importer will write files to to the disk
# or if the sync is meant to only introduce metadata into Pulp.
write_files: true

# Used in setting the search_2 value; value will be value_X where X is a unit
# counter mod search_entropy
# search_entropy: 5

# -----------------------------------------------------------------------------

[sync-override]
# These properties are sent as properties to a single sync call

# After the importer has finished the actual work of the simulated sync, it
# will sit and wait for this amount of time to simulate a slow connection and
# response back to the Pulp server.
# sync_delay_in_seconds: 60

# -----------------------------------------------------------------------------

[distributor]

# Indicates if the harness distributor should write unit files to a publish
# directory; set this to false to have the distributor run through the motions
# but not bother with the actual filesystem changes
write_files: true

# Directory into which units will be published. Required if write_files is true.
publish_dir: /tmp/harness-publish

# -----------------------------------------------------------------------------

[publish-override]
# These properties are sent as properties to a single publish call

# After the distributor has finished the actual work of the simulated publish, it
# will sit and wait for this amount of time to simulate a slow connection and
# response back to the Pulp server.
# publish_delay_in_seconds: 60

# -----------------------------------------------------------------------------

[query]
# These properties are used to build the unit association criteria.

# - Unit Metadata Filters -

# For all of the below values, if a * is in the value, the filter will be
# converted to a regex filter instead of a straight match.

# search_1: values will be value_X where X is a unique counter for each unit
# search_2: values will be value_X where X is
# random_1: randomly generated 4 character string for each unit

# - Sort -

# Valid values: created, updated, unit_type_id, unit_id, owner_type, owner_id
# association_sort: space separated list for multiple entries

# Indexed fields: search_1, search_2 -- Non-indexed fields: random_1
# unit_sort: space separated list for multiple entries

# Valid values: ascending, descending
# sort_direction: ascending

# - Limit & Skip -

# Maximum number of results to return
# limit: 10

# Number of units at the front of the ordered list to bypass
# skip: 0

# - Fields -

# Space separated list of unit fields to include
# unit_fields: name

# -----------------------------------------------------------------------------

[associate]
# These properties are used to drive the call to associate units from one
# repository into another

# These need to be explicitly created and configured prior to running the
# associate call
source_repo_id: source_repo
dest_repo_id: dest_repo

# - Unit Metadata Filters -

# For all of the below values, if a * is in the value, the filter will be
# converted to a regex filter instead of a straight match.

# search_1: values will be value_X where X is a unique counter for each unit
# search_2: values will be value_X where X is
# random_1: randomly generated 4 character string for each unit


# -----------------------------------------------------------------------------

[output]
# Controls how the script will format its output (can likely be left to defaults
# unless you're compulsive or curious)

# If true, no output will be printed. The exit code of the script can still be
# used to determine if the script ran correctly.
silent: false

# If true, the details of the REST call and returned HTTP status will be printed
print_rest: true

# If true, call timing information will be printed
print_call_time: true

# If the number of found units exceeds this number, only the count
# will be displayed instead of the unit metadata
list_units_limit: 5

# If true, output will be colored
use_color: true

# Indentation length used for formatting JSON responses (only relevant when
# print_rest is true)
json_indent: 2
