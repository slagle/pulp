[[PageOutline]]
{{{
#!comment
!!!DO NOT EDIT DIRECTLY!!!
This wiki page was generated by the restapi.py script
If you do edit this page directly, please remove this comment
}}}
= Services RESTful API = #top
''No description.'' [[BR]]
[[BR]]

----

== list of available dependencies. ==
''list of available dependencies required for a specified package per repo.'' [[BR]]
[[BR]]
'''method''': POST [[BR]]
[[BR]]
'''path''': /services/dependencies/ [[BR]]
[[BR]]
'''permission''': READ [[BR]]
[[BR]]
'''success response''': 200 OK [[BR]]
[[BR]]
'''failure response''': [[BR]]
'''return''': a dictionary of dependency info in the format {'printable_dependency_result' : '', 'resolved' : [], 'unresolved' : [], 'dependency_tree' : {}} [[BR]]
[[BR]]
'''parameters''': 
 * '''pkgnames''' <list> ''list of package names in the format name, name.arch, name-ver-rel.arch, name-ver,''
 * '''me-ver-rel''' <epoch:name-ver-rel.arch> ''name-epoch:ver-rel.arch.''
 * '''repoids''' <list> ''list of repo ids''
 * '''recursive''' ''(optional)'' <boolean> ''performs dependency resolution recursively''
 * '''make_tree''' ''(optional)'' <boolean> ''constrcts a dependency results as a tree form''
[[BR]]

----

== Disable Global Repository Authentication ==
''Configures the Pulp server to not authenticate access to repositories on a global level (individual repo access can still be controlled using the repo APIs).'' [[BR]]
[[BR]]
'''method''': POST [[BR]]
[[BR]]
'''path''': /disable_global_repo_credentials [[BR]]
[[BR]]
'''permission''': EXECUTE [[BR]]
[[BR]]
'''success response''': 200 OK [[BR]]
[[BR]]
'''failure response''': 206 PARTIAL CONTENT [[BR]]
[[BR]]
'''return''': list of CDS hostnames that were successfully updated and a list of the ones that failed to update [[BR]]
[[BR]]

----

== Disassociate a collection of filename,checksum tuples from multiple repositories ==
''Disassociate a collection of packages from a series of repositories'' [[BR]]
[[BR]]
'''method''': POST [[BR]]
[[BR]]
'''path''': /services/disassociate/packages/ [[BR]]
[[BR]]
'''permission''': READ [[BR]]
[[BR]]
'''success response''': 200 OK [[BR]]
[[BR]]
'''failure response''': [[BR]]
'''return''': a list of errors in the format of [{'filename':{'checksum_value':[repoid]}}] [[BR]]
[[BR]]
'''parameters''': 
 * '''package_info: list of tuples in the format [((filename''' <checksum)> ''[repoids]]''
[[BR]]

----

== Enable Global Repository Authentication ==
''Configures the Pulp server to apply the given credentials to requests against all of its repositories.'' [[BR]]
[[BR]]
'''method''': POST [[BR]]
[[BR]]
'''path''': /enable_global_repo_credentials [[BR]]
[[BR]]
'''permission''': EXECUTE [[BR]]
[[BR]]
'''success response''': 200 OK [[BR]]
[[BR]]
'''failure response''': 206 PARTIAL CONTENT [[BR]]
[[BR]]
'''return''': list of CDS hostnames that were successfully updated and a list of the ones that failed to update [[BR]]
[[BR]]

----

== Repository Discovery ==
''Discover repository urls with metadata and create candidate repos. Supports http, https and file based urls. The file based url paths should be accessible by apache to perform discovery.'' [[BR]]
[[BR]]
'''method''': POST [[BR]]
[[BR]]
'''path''': /services/discovery/repo/ [[BR]]
[[BR]]
'''permission''': EXECUTE [[BR]]
[[BR]]
'''success response''': 200 OK [[BR]]
[[BR]]
'''failure response''': 206 PARTIAL CONTENT [[BR]]
[[BR]]
'''return''': list of matching repourls. [[BR]]
[[BR]]
'''parameters''': 
 * '''url''' <str> ''remote url to perform discovery''
 * '''type''' <str> ''type of content to discover(supported types: 'yum')''
 * '''cert_data''' ''(optional)'' <dict> ''a hash of ca and cert info to access if url is secure; {'ca' : <ca>,'cert':<cert>}''
[[BR]]

----

== Repository group export ==
''schedule an export on a group of repositories'' [[BR]]
[[BR]]
'''method''': POST [[BR]]
[[BR]]
'''path''': /services/export/repository_group/ [[BR]]
[[BR]]
'''permission''': EXECUTE [[BR]]
[[BR]]
'''success response''': 200 OK [[BR]]
[[BR]]
'''failure response''': 206 PARTIAL CONTENT [[BR]]
[[BR]]
'''return''': Job object [[BR]]
[[BR]]
'''parameters''': 
 * '''groupid''' <str> ''repository group to export''
 * '''target_location''' <str> ''target location on the server filesystem where the content needs to be exported''
 * '''generate_isos''' ''(optional)'' <boolean> ''wrap the exported content into iso image files.''
 * '''overwrite''' ''(optional)'' <boolean> ''overwrite the content in target location if not empty''
[[BR]]

----

== Repository Content Export ==
''Export the repository's content into target directory from its source.'' [[BR]]
[[BR]]
'''method''': POST [[BR]]
[[BR]]
'''path''': /services/export/repository/ [[BR]]
[[BR]]
'''permission''': EXECUTE [[BR]]
[[BR]]
'''success response''': 202 Accepted [[BR]]
[[BR]]
'''failure response''': 
 404 Not Found if the id does not match a repository [[BR]]
                           406 Not Acceptable if the repository does not have a source [[BR]]
                           409 Conflict if a export is already in progress for the repository [[BR]]
[[BR]]
'''return''': a Task object [[BR]]
[[BR]]
'''parameters''': 
 * '''repoid''' <str> ''id of the repository to export''
 * '''target_location''' <str> ''target location on the server filesystem where the content needs to be exported''
 * '''generate_isos''' ''(optional)'' <boolean> ''wrap the exported content into iso image files.''
 * '''overwrite''' ''(optional)'' <boolean> ''overwrite the content in target location if not empty''
[[BR]]
